version: "3.7"
services:
  postgres:
    image: library/postgres:13
    container_name: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"

  rabbit:
    image: rabbitmq:3.9.2-management-alpine
    hostname: rabbit
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - "./rabbitmq/data/:/var/lib/rabbitmq/"
      - "./rabbitmq/log/:/var/log/rabbitmq/"
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics check_local_alarms"]
      interval: 1s
      timeout: 5s
      retries: 5

  api-gateway:
    build:
      context: .
      dockerfile: ./src/FlightBooking.Gateway/Dockerfile
    container_name: api-gateway
    restart: on-failure
    ports:
      - "8080:8080"
    depends_on:
      - flight-service
      - bonus-service
      - ticket-service
      - rabbit

  ticket-service:
    build:
      context: .
      dockerfile: ./src/FlightBooking.TicketService/Dockerfile
    container_name: ticket-service
    restart: on-failure
    ports:
      - "8070:8070"
    depends_on:
      - postgres

  flight-service:
    build:
      context: .
      dockerfile: ./src/FlightBooking.FlightService/Dockerfile
    container_name: flight-service
    restart: on-failure
    ports:
      - "8060:8060"
    depends_on:
      - postgres

  bonus-service:
    build:
      context: .
      dockerfile: ./src/FlightBooking.BonusService/Dockerfile
    container_name: bonus-service
    restart: on-failure
    ports:
      - "8050:8050"
    depends_on:
      - postgres
      - rabbit

volumes:
  db-data: